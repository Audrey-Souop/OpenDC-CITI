<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.opendc.web.server.rest.user.TopologyResourceTest" tests="22" skipped="0" failures="0" errors="0" timestamp="2025-05-17T00:28:09" hostname="ece-d6200-audu" time="0.227">
  <properties/>
  <testcase name="testUpdateUnauthorized()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.014"/>
  <testcase name="testDeleteNonExistent()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.008"/>
  <testcase name="testUpdateAsViewer()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.011"/>
  <testcase name="testGetNonExisting()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.008"/>
  <testcase name="testCreateEmpty()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.008"/>
  <testcase name="testCreateNonExistent()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.009"/>
  <testcase name="testGetAllWithoutAuth()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.011"/>
  <testcase name="testGetExisting()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.012"/>
  <testcase name="testDeleteAsEditor()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.009"/>
  <testcase name="testGetWithoutToken()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.004"/>
  <testcase name="testDeleteAsViewer()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.007"/>
  <testcase name="testCreateBlankName()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.007"/>
  <testcase name="testCreateUnauthorized()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.008"/>
  <testcase name="testDeleteUsed()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.017"/>
  <testcase name="testCreate()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.021"/>
  <testcase name="testDelete()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.009"/>
  <testcase name="testGetAll()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.007"/>
  <testcase name="testUpdateNonExistent()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.01"/>
  <testcase name="testUpdate()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.013"/>
  <testcase name="testDeleteUnauthorized()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.007"/>
  <testcase name="testGetInvalidToken()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.005"/>
  <testcase name="testGetUnauthorized()" classname="org.opendc.web.server.rest.user.TopologyResourceTest" time="0.006"/>
  <system-out><![CDATA[Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.name,
        t1_0.number,
        t1_0.project_id,
        t1_0.rooms,
        t1_0.updated_at 
    from
        Topology t1_0 
    where
        t1_0.project_id=? 
        and t1_0.number=? 
    fetch
        first ? rows only
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.name,
        t1_0.number,
        t1_0.project_id,
        t1_0.rooms,
        t1_0.updated_at 
    from
        Topology t1_0 
    where
        t1_0.project_id=? 
        and t1_0.number=? 
    fetch
        first ? rows only
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.name,
        t1_0.number,
        t1_0.project_id,
        t1_0.rooms,
        t1_0.updated_at 
    from
        Topology t1_0 
    where
        t1_0.project_id=? 
        and t1_0.number=? 
    fetch
        first ? rows only
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.name,
        p1_0.portfolios_created,
        p1_0.scenarios_created,
        p1_0.topologies_created,
        p1_0.updated_at 
    from
        Project p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.name,
        t1_0.number,
        t1_0.project_id,
        t1_0.rooms,
        t1_0.updated_at 
    from
        Topology t1_0 
    where
        t1_0.project_id=? 
        and t1_0.number=? 
    fetch
        first ? rows only
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.name,
        p1_0.portfolios_created,
        p1_0.scenarios_created,
        p1_0.topologies_created,
        p1_0.updated_at 
    from
        Project p1_0 
    where
        p1_0.id=?
Hibernate: 
    update
        Topology 
    set
        name=?,
        number=?,
        project_id=?,
        rooms=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    delete 
    from
        Topology 
    where
        id=?
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.name,
        t1_0.number,
        t1_0.project_id,
        t1_0.rooms,
        t1_0.updated_at 
    from
        Topology t1_0 
    where
        t1_0.project_id=? 
        and t1_0.number=? 
    fetch
        first ? rows only
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.name,
        p1_0.portfolios_created,
        p1_0.scenarios_created,
        p1_0.topologies_created,
        p1_0.updated_at 
    from
        Project p1_0 
    where
        p1_0.id=?
Hibernate: 
    update
        Topology 
    set
        name=?,
        number=?,
        project_id=?,
        rooms=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    delete 
    from
        Topology 
    where
        id=?
2025-05-16 20:28:10,078 WARN  [org.hib.eng.jdb.spi.SqlExceptionHelper] (executor-thread-1) SQL Error: 23503, SQLState: 23503
2025-05-16 20:28:10,079 ERROR [org.hib.eng.jdb.spi.SqlExceptionHelper] (executor-thread-1) Referential integrity constraint violation: "FK_SCENARIOS_TOPOLOGY: PUBLIC.SCENARIO FOREIGN KEY(TOPOLOGY_ID) REFERENCES PUBLIC.TOPOLOGY(ID) (CAST(4 AS BIGINT))"; SQL statement:
delete from Topology where id=? [23503-224]
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.name,
        p1_0.portfolios_created,
        p1_0.scenarios_created,
        p1_0.topologies_created,
        p1_0.updated_at 
    from
        Project p1_0 
    where
        p1_0.id=?
Hibernate: 
    update
        Project 
    set
        topologies_created=(cast(? as integer)+1),
        updated_at=? 
    where
        id=? 
        and topologies_created=?
Hibernate: 
    select
        t1_0.project_id,
        t1_0.id,
        t1_0.created_at,
        t1_0.name,
        t1_0.number,
        t1_0.rooms,
        t1_0.updated_at 
    from
        Topology t1_0 
    where
        t1_0.project_id=? 
    order by
        t1_0.id
Hibernate: 
    select
        next value for topology_id_seq
Hibernate: 
    insert 
    into
        Topology
        (created_at, name, number, project_id, rooms, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.name,
        t1_0.number,
        t1_0.project_id,
        t1_0.rooms,
        t1_0.updated_at 
    from
        Topology t1_0 
    where
        t1_0.project_id=? 
        and t1_0.number=? 
    fetch
        first ? rows only
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.name,
        p1_0.portfolios_created,
        p1_0.scenarios_created,
        p1_0.topologies_created,
        p1_0.updated_at 
    from
        Project p1_0 
    where
        p1_0.id=?
Hibernate: 
    update
        Topology 
    set
        name=?,
        number=?,
        project_id=?,
        rooms=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    delete 
    from
        Topology 
    where
        id=?
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.name,
        t1_0.number,
        t1_0.project_id,
        t1_0.rooms,
        t1_0.updated_at 
    from
        Topology t1_0 
    where
        t1_0.project_id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.name,
        p1_0.portfolios_created,
        p1_0.scenarios_created,
        p1_0.topologies_created,
        p1_0.updated_at 
    from
        Project p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.name,
        t1_0.number,
        t1_0.project_id,
        t1_0.rooms,
        t1_0.updated_at 
    from
        Topology t1_0 
    where
        t1_0.project_id=? 
        and t1_0.number=? 
    fetch
        first ? rows only
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.name,
        t1_0.number,
        t1_0.project_id,
        t1_0.rooms,
        t1_0.updated_at 
    from
        Topology t1_0 
    where
        t1_0.project_id=? 
        and t1_0.number=? 
    fetch
        first ? rows only
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.name,
        p1_0.portfolios_created,
        p1_0.scenarios_created,
        p1_0.topologies_created,
        p1_0.updated_at 
    from
        Project p1_0 
    where
        p1_0.id=?
Hibernate: 
    update
        Topology 
    set
        name=?,
        number=?,
        project_id=?,
        rooms=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
