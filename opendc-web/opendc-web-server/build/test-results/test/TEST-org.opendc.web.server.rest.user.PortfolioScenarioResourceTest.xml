<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.opendc.web.server.rest.user.PortfolioScenarioResourceTest" tests="12" skipped="0" failures="0" errors="0" timestamp="2025-05-17T00:28:09" hostname="ece-d6200-audu" time="0.164">
  <properties/>
  <testcase name="testCreateAsViewer()" classname="org.opendc.web.server.rest.user.PortfolioScenarioResourceTest" time="0.019"/>
  <testcase name="testGet()" classname="org.opendc.web.server.rest.user.PortfolioScenarioResourceTest" time="0.022"/>
  <testcase name="testCreateUnknownTopology()" classname="org.opendc.web.server.rest.user.PortfolioScenarioResourceTest" time="0.014"/>
  <testcase name="testCreateEmpty()" classname="org.opendc.web.server.rest.user.PortfolioScenarioResourceTest" time="0.006"/>
  <testcase name="testCreateUnknownTrace()" classname="org.opendc.web.server.rest.user.PortfolioScenarioResourceTest" time="0.015"/>
  <testcase name="testCreateNonExistent()" classname="org.opendc.web.server.rest.user.PortfolioScenarioResourceTest" time="0.012"/>
  <testcase name="testGetWithoutToken()" classname="org.opendc.web.server.rest.user.PortfolioScenarioResourceTest" time="0.005"/>
  <testcase name="testCreateBlankName()" classname="org.opendc.web.server.rest.user.PortfolioScenarioResourceTest" time="0.011"/>
  <testcase name="testCreateUnauthorized()" classname="org.opendc.web.server.rest.user.PortfolioScenarioResourceTest" time="0.011"/>
  <testcase name="testCreate()" classname="org.opendc.web.server.rest.user.PortfolioScenarioResourceTest" time="0.03"/>
  <testcase name="testGetInvalidToken()" classname="org.opendc.web.server.rest.user.PortfolioScenarioResourceTest" time="0.005"/>
  <testcase name="testGetUnauthorized()" classname="org.opendc.web.server.rest.user.PortfolioScenarioResourceTest" time="0.007"/>
  <system-out><![CDATA[Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        s1_0.id,
        s1_0.name,
        s1_0.number,
        s1_0.phenomena,
        s1_0.portfolio_id,
        s1_0.project_id,
        s1_0.scheduler_name,
        s1_0.topology_id,
        s1_0.sampling_fraction,
        s1_0.trace_id 
    from
        Scenario s1_0 
    join
        Portfolio p1_0 
            on p1_0.id=s1_0.portfolio_id 
            and p1_0.number=? 
    where
        s1_0.project_id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.name,
        p1_0.number,
        p1_0.project_id,
        p2_0.id,
        p2_0.created_at,
        p2_0.name,
        p2_0.portfolios_created,
        p2_0.scenarios_created,
        p2_0.topologies_created,
        p2_0.updated_at,
        p1_0.targets 
    from
        Portfolio p1_0 
    join
        Project p2_0 
            on p2_0.id=p1_0.project_id 
    where
        p1_0.id=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.name,
        t1_0.number,
        t1_0.project_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.name,
        p1_0.portfolios_created,
        p1_0.scenarios_created,
        p1_0.topologies_created,
        p1_0.updated_at,
        t1_0.rooms,
        t1_0.updated_at 
    from
        Topology t1_0 
    join
        Project p1_0 
            on p1_0.id=t1_0.project_id 
    where
        t1_0.id in (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        t1_0.id,
        t1_0.name,
        t1_0.type 
    from
        Trace t1_0 
    where
        t1_0.id=?
Hibernate: 
    select
        j1_0.scenario_id,
        j1_0.id,
        j1_0.created_at,
        j1_0.created_by,
        j1_0.repeats,
        j1_0.results,
        j1_0.runtime,
        j1_0.state,
        j1_0.updated_at 
    from
        Job j1_0 
    where
        j1_0.scenario_id in (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        p1_0.id,
        p1_0.name,
        p1_0.number,
        p1_0.project_id,
        p1_0.targets 
    from
        Portfolio p1_0 
    where
        p1_0.project_id=? 
        and p1_0.number=? 
    fetch
        first ? rows only
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.name,
        p1_0.portfolios_created,
        p1_0.scenarios_created,
        p1_0.topologies_created,
        p1_0.updated_at 
    from
        Project p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.name,
        t1_0.number,
        t1_0.project_id,
        t1_0.rooms,
        t1_0.updated_at 
    from
        Topology t1_0 
    where
        t1_0.project_id=? 
        and t1_0.number=? 
    fetch
        first ? rows only
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        p1_0.id,
        p1_0.name,
        p1_0.number,
        p1_0.project_id,
        p1_0.targets 
    from
        Portfolio p1_0 
    where
        p1_0.project_id=? 
        and p1_0.number=? 
    fetch
        first ? rows only
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.name,
        p1_0.portfolios_created,
        p1_0.scenarios_created,
        p1_0.topologies_created,
        p1_0.updated_at 
    from
        Project p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.name,
        t1_0.number,
        t1_0.project_id,
        t1_0.rooms,
        t1_0.updated_at 
    from
        Topology t1_0 
    where
        t1_0.project_id=? 
        and t1_0.number=? 
    fetch
        first ? rows only
Hibernate: 
    select
        t1_0.id,
        t1_0.name,
        t1_0.type 
    from
        Trace t1_0 
    where
        t1_0.id=?
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        p1_0.id,
        p1_0.name,
        p1_0.number,
        p1_0.project_id,
        p1_0.targets 
    from
        Portfolio p1_0 
    where
        p1_0.project_id=? 
        and p1_0.number=? 
    fetch
        first ? rows only
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
Hibernate: 
    select
        p1_0.id,
        p1_0.name,
        p1_0.number,
        p1_0.project_id,
        p1_0.targets 
    from
        Portfolio p1_0 
    where
        p1_0.project_id=? 
        and p1_0.number=? 
    fetch
        first ? rows only
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.name,
        p1_0.portfolios_created,
        p1_0.scenarios_created,
        p1_0.topologies_created,
        p1_0.updated_at 
    from
        Project p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.name,
        t1_0.number,
        t1_0.project_id,
        t1_0.rooms,
        t1_0.updated_at 
    from
        Topology t1_0 
    where
        t1_0.project_id=? 
        and t1_0.number=? 
    fetch
        first ? rows only
Hibernate: 
    select
        t1_0.id,
        t1_0.name,
        t1_0.type 
    from
        Trace t1_0 
    where
        t1_0.id=?
Hibernate: 
    update
        Project 
    set
        scenarios_created=(cast(? as integer)+1),
        updated_at=? 
    where
        id=? 
        and scenarios_created=?
Hibernate: 
    select
        next value for scenario_id_seq
Hibernate: 
    select
        next value for job_id_seq
Hibernate: 
    select
        ua1_0.user_id,
        ua1_0.period_end,
        ua1_0.simulation_time,
        ua1_0.simulation_time_budget 
    from
        UserAccounting ua1_0 
    where
        ua1_0.user_id=?
Hibernate: 
    select
        s1_0.portfolio_id,
        s1_0.id,
        s1_0.name,
        s1_0.number,
        s1_0.phenomena,
        s1_0.project_id,
        p2_0.id,
        p2_0.created_at,
        p2_0.name,
        p2_0.portfolios_created,
        p2_0.scenarios_created,
        p2_0.topologies_created,
        p2_0.updated_at,
        s1_0.scheduler_name,
        s1_0.topology_id,
        t1_0.id,
        t1_0.created_at,
        t1_0.name,
        t1_0.number,
        t1_0.project_id,
        p3_0.id,
        p3_0.created_at,
        p3_0.name,
        p3_0.portfolios_created,
        p3_0.scenarios_created,
        p3_0.topologies_created,
        p3_0.updated_at,
        t1_0.rooms,
        t1_0.updated_at,
        s1_0.sampling_fraction,
        s1_0.trace_id,
        t2_0.id,
        t2_0.name,
        t2_0.type 
    from
        Scenario s1_0 
    left join
        Project p2_0 
            on p2_0.id=s1_0.project_id 
    left join
        Topology t1_0 
            on t1_0.id=s1_0.topology_id 
    left join
        Project p3_0 
            on p3_0.id=t1_0.project_id 
    left join
        Trace t2_0 
            on t2_0.id=s1_0.trace_id 
    where
        s1_0.portfolio_id=? 
    order by
        s1_0.id
Hibernate: 
    insert 
    into
        Scenario
        (name, number, phenomena, portfolio_id, project_id, scheduler_name, topology_id, sampling_fraction, trace_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Job
        (created_at, created_by, repeats, results, runtime, scenario_id, state, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        pa1_0.project_id,
        pa1_0.user_name,
        pa1_0.role 
    from
        ProjectAuthorization pa1_0 
    where
        (
            pa1_0.project_id, pa1_0.user_name
        ) in ((?, ?))
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
